#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <Servo.h>


const byte ROWS = 4; 
const byte COLS = 4; 

Servo lock;

int pos = 0;

char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
//these are the digital pins where the keypad needs to be plugged into 9 is the left most pin 2 is the right most pin
byte rowPins[ROWS] = {9, 8, 7, 6}; 
byte colPins[COLS] = {5, 4, 3, 2}; 


//this just maps the keys to the characters
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 

int cursorx = 0;
char clrbtn='#';
char openLock = 'A';
char closeLock = 'B';
char dispense ='C';


LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C address 0x27, 16 column and 2 rows

void setup()
{
  lcd.init(); // initialize the lcd
  lcd.backlight();
  lock.attach(22);  
}

void loop()
{

  lock.write(pos);
   lcd.setCursor(cursorx, 0);      // move cursor to   (0, 0)
          // print message at (0, 0)
 
  
  char customKey = customKeypad.getKey();
  if (customKey){
    lcd.print(customKey);
    lcd.setCursor(cursorx, 0);
    cursorx++;
  }       
  if (customKey==clrbtn){
    lcd.clear();
    cursorx=0;
    lcd.setCursor(cursorx, 0);
  }
if (customKey==openLock){
  pos = 90;
}

if (customKey==closeLock){
  pos = 0;
}
  
}
