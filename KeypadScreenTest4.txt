#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <Servo.h>

const byte ROWS = 4;
const byte COLS = 4;

Servo lock;

int pos = 0;

char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};

Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

int cursorx = 0;
char enterbtn = '#';
char openLock = 'A';
char closeLock = 'B';
char dispense = 'C';

int timerValue = 0;

LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup()
{
  lcd.init();
  lcd.backlight();
  lock.attach(22);
  lcd.print("Enter a valid timer value (in minutes): ");
}

void loop()
{
  lcd.setCursor(cursorx, 0);

  char customKey = customKeypad.getKey();
  if (customKey)
  {
    lcd.print(customKey);
    lcd.setCursor(cursorx, 0);
    cursorx++;

    if (customKey == enterbtn)
    {
      lcd.clear();
      cursorx = 0;
      lcd.setCursor(cursorx, 0);
      timerValue = 0;
    }
    else if (customKey == openLock)
    {
      lock.write(90);
    }

    lcd.clear();

  while (customKey != enterbtn) {
    customKey = customKeypad.getKey(); // Update customKey inside the loop
    if (customKey >= '0' && customKey <= '9') {
      timerValue = timerValue * 10 + (customKey - '0');
      lcd.print(customKey); // Print the entered digit on LCD
      cursorx++; // Move the cursor position
    }
}
    
  }

  if (timerValue > 0)
  {
    delay(60000); // Delay for 1 minute
    timerValue--;

    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Time remaining: ");
    lcd.print(timerValue);

    if (timerValue == 0)
    {
      lcd.setCursor(0, 1);
      lcd.print("Timer expired");
      lock.write(90);
      
      
    }
  }
}

